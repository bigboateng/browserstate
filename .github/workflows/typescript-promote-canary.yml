name: Promote Canary to Stable

on:
  workflow_dispatch:
    inputs:
      canary_version:
        description: 'Canary version to promote (e.g., 0.3.0-canary.20250404021914)'
        required: true
        type: string
      release_type:
        description: 'Release type'
        required: true
        default: 'patch'
        type: choice
        options:
          - major
          - minor
          - patch
          - same
      release_notes:
        description: 'Release notes'
        required: false
        type: string

jobs:
  promote-to-stable:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
      
      - name: Configure Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
      
      - name: Extract base version
        id: extract_version
        run: |
          CANARY_VERSION="${{ github.event.inputs.canary_version }}"
          # Extract base version (remove canary suffix)
          BASE_VERSION=$(echo "$CANARY_VERSION" | sed -E 's/(-canary\.[0-9]+)$//')
          echo "base_version=$BASE_VERSION" >> $GITHUB_OUTPUT
      
      - name: Download canary package
        run: |
          cd typescript
          # Install the canary version to temporary directory
          npm pack browserstate@${{ github.event.inputs.canary_version }} --pack-destination /tmp
          
          # Extract the package
          tar -xzf /tmp/browserstate-*.tgz -C /tmp
      
      - name: Determine new version
        id: new_version
        run: |
          BASE_VERSION="${{ steps.extract_version.outputs.base_version }}"
          RELEASE_TYPE="${{ github.event.inputs.release_type }}"
          
          if [ "$RELEASE_TYPE" = "same" ]; then
            # Use the same version without canary suffix
            NEW_VERSION="$BASE_VERSION"
          else
            # Increment version according to release type
            cd typescript
            # First set version to base version
            npm version "$BASE_VERSION" --no-git-tag-version
            # Then increment according to release type
            NEW_VERSION=$(npm version "$RELEASE_TYPE" --no-git-tag-version)
            # Remove quotes
            NEW_VERSION="${NEW_VERSION//\"/}"
          fi
          
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
      
      - name: Update package.json
        run: |
          cd typescript
          # Set the new version
          npm version ${{ steps.new_version.outputs.new_version }} --no-git-tag-version
          
          # Commit changes
          git add package.json
          git commit -m "chore: release version ${{ steps.new_version.outputs.new_version }}"
          
          # Create tag
          git tag -a "v${{ steps.new_version.outputs.new_version }}" -m "Release ${{ steps.new_version.outputs.new_version }}"
          git push --follow-tags
      
      - name: Build
        run: |
          cd typescript
          npm ci
          npm run build
      
      - name: Publish to npm
        run: |
          cd typescript
          npm publish --provenance
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.new_version.outputs.new_version }}
          name: Release ${{ steps.new_version.outputs.new_version }}
          body: |
            Promoted from canary version ${{ github.event.inputs.canary_version }}
            
            ${{ github.event.inputs.release_notes }}
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Notify success
        run: |
          echo "ðŸŽ‰ Successfully promoted canary version ${{ github.event.inputs.canary_version }} to stable version ${{ steps.new_version.outputs.new_version }}!" 